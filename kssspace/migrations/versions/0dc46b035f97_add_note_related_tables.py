"""add note related tables

Revision ID: 0dc46b035f97
Revises: d15848920f3b
Create Date: 2023-12-05 10:27:44.794264

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0dc46b035f97'
down_revision: Union[str, None] = 'd15848920f3b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=True),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('thumbnail', sa.String(length=255), nullable=True),
    sa.Column('is_draft', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('note_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('slug', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('thumbnail', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('note_tag_assoc',
    sa.Column('note_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['note_tag.id'], ),
    sa.UniqueConstraint('note_id', 'tag_id', name='note_tag_assoc_uq_1')
    )
    op.create_table('series_note_assoc',
    sa.Column('series_id', sa.Integer(), nullable=True),
    sa.Column('note_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.UniqueConstraint('series_id', 'note_id', name='series_note_assoc_nq_1')
    )
    op.drop_table('schema_migration')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schema_migration',
    sa.Column('onerow_id', sa.BOOLEAN(), server_default=sa.text('(TRUE)'), nullable=True),
    sa.Column('data_loaded', sa.BOOLEAN(), nullable=False),
    sa.Column('version', sa.INTEGER(), nullable=False),
    sa.CheckConstraint('onerow_id', name='onerow_uni'),
    sa.PrimaryKeyConstraint('onerow_id')
    )
    op.drop_table('series_note_assoc')
    op.drop_table('note_tag_assoc')
    op.drop_table('series')
    op.drop_table('note_tag')
    op.drop_table('note')
    # ### end Alembic commands ###
